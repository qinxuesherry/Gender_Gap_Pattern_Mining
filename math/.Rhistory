theme(axis.text.x = element_text(angle = 45, hjust = 1))
combined_df
library(tidyverse)
library(ggalluvial)
# Assuming your data is already loaded into a dataframe called 'combined_df'
# Define regions
regions <- list(
Northeast = c("Connecticut", "Maine", "Massachusetts", "New Hampshire", "Rhode Island", "Vermont", "New Jersey", "New York", "Pennsylvania"),
Midwest = c("Illinois", "Indiana", "Iowa", "Kansas", "Michigan", "Minnesota", "Missouri", "Nebraska", "North Dakota", "Ohio", "South Dakota", "Wisconsin"),
South = c("Alabama", "Arkansas", "Delaware", "Florida", "Georgia", "Kentucky", "Louisiana", "Maryland", "Mississippi", "North Carolina", "Oklahoma", "South Carolina", "Tennessee", "Texas", "Virginia", "West Virginia"),
West = c("Alaska", "Arizona", "California", "Colorado", "Hawaii", "Idaho", "Montana", "Nevada", "New Mexico", "Oregon", "Utah", "Washington", "Wyoming")
)
# Assign regions to jurisdictions
combined_df$Region <- sapply(combined_df$Jurisdiction, function(j) {
unlist(lapply(regions, function(r, j) {
if(j %in% r) {
return(names(r))
}
}, j = j))
})
library(tidyverse)
library(ggalluvial)
# Assuming your data is already loaded into a dataframe called 'combined_df'
# Define regions
regions <- list(
Northeast = c("Connecticut", "Maine", "Massachusetts", "New Hampshire", "Rhode Island", "Vermont", "New Jersey", "New York", "Pennsylvania"),
Midwest = c("Illinois", "Indiana", "Iowa", "Kansas", "Michigan", "Minnesota", "Missouri", "Nebraska", "North Dakota", "Ohio", "South Dakota", "Wisconsin"),
South = c("Alabama", "Arkansas", "Delaware", "Florida", "Georgia", "Kentucky", "Louisiana", "Maryland", "Mississippi", "North Carolina", "Oklahoma", "South Carolina", "Tennessee", "Texas", "Virginia", "West Virginia"),
West = c("Alaska", "Arizona", "California", "Colorado", "Hawaii", "Idaho", "Montana", "Nevada", "New Mexico", "Oregon", "Utah", "Washington", "Wyoming")
)
# Assign regions to jurisdictions
combined_df$Region <- sapply(combined_df$Jurisdiction, function(j) {
unlist(lapply(regions, function(r, j) {
if(j %in% r) {
return(names(r))
}
}, j = j))
})
combined_df
jurisdiction_to_region <- c(
Alabama = "South", Alaska = "West", Arizona = "West", Arkansas = "South",
California = "West", Colorado = "West", Connecticut = "Northeast", Delaware = "South",
Florida = "South", Georgia = "South", Hawaii = "West", Idaho = "West",
Illinois = "Midwest", Indiana = "Midwest", Iowa = "Midwest", Kansas = "Midwest",
Kentucky = "South", Louisiana = "South", Maine = "Northeast", Maryland = "South",
Massachusetts = "Northeast", Michigan = "Midwest", Minnesota = "Midwest",
Mississippi = "South", Missouri = "Midwest", Montana = "West", Nebraska = "Midwest",
Nevada = "West", New_Hampshire = "Northeast", New_Jersey = "Northeast", New_Mexico = "West",
New_York = "Northeast", North_Carolina = "South", North_Dakota = "Midwest", Ohio = "Midwest",
Oklahoma = "South", Oregon = "West", Pennsylvania = "Northeast", Rhode_Island = "Northeast",
South_Carolina = "South", South_Dakota = "Midwest", Tennessee = "South", Texas = "South",
Utah = "West", Vermont = "Northeast", Virginia = "South", Washington = "West",
West_Virginia = "South", Wisconsin = "Midwest", Wyoming = "West"
)
# Step 2: Use the mapping to add a Region column
combined_df$Region <- jurisdiction_to_region[combined_df$Jurisdiction]
combined_df
jurisdiction_to_region <- c(
"Alabama" = "South", "Alaska" = "West", "Arizona" = "West", "Arkansas" = "South",
"California" = "West", "Colorado" = "West", "Connecticut" = "Northeast", "Delaware" = "South",
"Florida" = "South", "Georgia" = "South", "Hawaii" = "West", "Idaho" = "West",
"Illinois" = "Midwest", "Indiana" = "Midwest", "Iowa" = "Midwest", "Kansas" = "Midwest",
"Kentucky" = "South", "Louisiana" = "South", "Maine" = "Northeast", "Maryland" = "South",
"Massachusetts" = "Northeast", "Michigan" = "Midwest", "Minnesota" = "Midwest",
"Mississippi" = "South", "Missouri" = "Midwest", "Montana" = "West", "Nebraska" = "Midwest",
"Nevada" = "West", "New Hampshire" = "Northeast", "New Jersey" = "Northeast", "New Mexico" = "West",
"New York" = "Northeast", "North Carolina" = "South", "North Dakota" = "Midwest", "Ohio" = "Midwest",
"Oklahoma" = "South", "Oregon" = "West", "Pennsylvania" = "Northeast", "Rhode Island" = "Northeast",
"South Carolina" = "South", "South Dakota" = "Midwest", "Tennessee" = "South", "Texas" = "South",
"Utah" = "West", "Vermont" = "Northeast", "Virginia" = "South", "Washington" = "West",
"West Virginia" = "South", "Wisconsin" = "Midwest", "Wyoming" = "West"
)
# Step 2: Use the mapping to add a Region column
combined_df$Region <- jurisdiction_to_region[combined_df$Jurisdiction]
combined_df
combined_df <- combined_df[combined_df$Jurisdiction != 'National']
combined_df <- combined_df[combined_df$Jurisdiction != 'National',]
combined_df
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
group_by(Region) %>%
mutate(Color = generate_shades(Region, n()))
# Step 4: Create the plot
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = Color)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_identity() +
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
group_by(Region) %>%
mutate(Color = generate_shades(Region, n()))
# Step 4: Create the plot
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = Jurisdiction)) +  # Use 'Jurisdiction' for fill aesthetic
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = combined_df$Color) +  # Manually set colors for each jurisdiction
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 10),  # Adjust legend title size if needed
legend.text = element_text(size = 8))
G4<-read.csv('grade_4_math/clean_data/jurisdiction_clusters_G4.csv')
G8<-read.csv('grade_8_math/clean_data/jurisdiction_clusters_G8.csv')
# Combine df1 and df2 based on 'Jurisdiction'
combined_df <- merge(G4, G8, by = "Jurisdiction")
head(combined_df)
combined_df$count <- 1
ggplot(data = combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = count)) +
geom_alluvium(aes(fill = factor(Jurisdiction))) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
jurisdiction_to_region <- c(
"Alabama" = "South", "Alaska" = "West", "Arizona" = "West", "Arkansas" = "South",
"California" = "West", "Colorado" = "West", "Connecticut" = "Northeast", "Delaware" = "South",
"Florida" = "South", "Georgia" = "South", "Hawaii" = "West", "Idaho" = "West",
"Illinois" = "Midwest", "Indiana" = "Midwest", "Iowa" = "Midwest", "Kansas" = "Midwest",
"Kentucky" = "South", "Louisiana" = "South", "Maine" = "Northeast", "Maryland" = "South",
"Massachusetts" = "Northeast", "Michigan" = "Midwest", "Minnesota" = "Midwest",
"Mississippi" = "South", "Missouri" = "Midwest", "Montana" = "West", "Nebraska" = "Midwest",
"Nevada" = "West", "New Hampshire" = "Northeast", "New Jersey" = "Northeast", "New Mexico" = "West",
"New York" = "Northeast", "North Carolina" = "South", "North Dakota" = "Midwest", "Ohio" = "Midwest",
"Oklahoma" = "South", "Oregon" = "West", "Pennsylvania" = "Northeast", "Rhode Island" = "Northeast",
"South Carolina" = "South", "South Dakota" = "Midwest", "Tennessee" = "South", "Texas" = "South",
"Utah" = "West", "Vermont" = "Northeast", "Virginia" = "South", "Washington" = "West",
"West Virginia" = "South", "Wisconsin" = "Midwest", "Wyoming" = "West"
)
# Step 2: Use the mapping to add a Region column
combined_df$Region <- jurisdiction_to_region[combined_df$Jurisdiction]
combined_df
combined_df <- combined_df[combined_df$Jurisdiction != 'National',]
combined_df
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
ombined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +  # Use 'RegionJurisdiction' for fill aesthetic
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = combined_df$Color[!duplicated(combined_df$RegionJurisdiction)]) +  # Assign colors
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.box = "vertical")
ombined_df
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
ombined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = Region)) +  # Use 'RegionJurisdiction' for fill aesthetic
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = combined_df$Color[!duplicated(combined_df$RegionJurisdiction)]) +  # Assign colors
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.box = "vertical")
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
ombined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +  # Use 'Jurisdiction' for fill aesthetic
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = combined_df$Color) +  # Manually set colors for each jurisdiction
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 10),  # Adjust legend title size if needed
legend.text = element_text(size = 8))
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +  # Use 'Jurisdiction' for fill aesthetic
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = combined_df$Color) +  # Manually set colors for each jurisdiction
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 10),  # Adjust legend title size if needed
legend.text = element_text(size = 8))
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +  # Use 'RegionJurisdiction' for fill aesthetic
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = combined_df$Color[!duplicated(combined_df$RegionJurisdiction)]) +  # Assign colors
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.box = "vertical")
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
color_palette <- scales::hue_pal()(length(unique(combined_df$RegionJurisdiction)))
# Plotting with the correct number of colors
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = color_palette) +  # Use the generated color palette
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
library(ggalluvial)
library(scales)
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
color_palette <- scales::hue_pal()(length(unique(combined_df$RegionJurisdiction)))
# Plotting with the correct number of colors
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = Jurisdiction)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = color_palette) +  # Use the generated color palette
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
library(ggalluvial)
library(scales)
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
color_palette <- scales::hue_pal()(length(unique(combined_df$RegionJurisdiction)))
# Plotting with the correct number of colors
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = color_palette) +  # Use the generated color palette
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
G4<-read.csv('grade_4_reading/clean_data/jurisdiction_clusters_G4.csv')
G8<-read.csv('grade_8_reading/clean_data/jurisdiction_clusters_G8.csv')
head(G4)
# Combine df1 and df2 based on 'Jurisdiction'
combined_df <- merge(G4, G8, by = "Jurisdiction")
head(combined_df)
write.csv(combined_df, "jurisdiction_clusters_reading.csv", row.names = FALSE)
library(ggalluvial)
library(ggplot2)
combined_df$count <- 1
ggplot(data = combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = count)) +
geom_alluvium(aes(fill = factor(Jurisdiction))) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df1 <- subset(combined_df, G4_Cluster == 4 & G8_Cluster == 3)
print(df1)
jurisdiction_to_region <- c(
"Alabama" = "South", "Alaska" = "West", "Arizona" = "West", "Arkansas" = "South",
"California" = "West", "Colorado" = "West", "Connecticut" = "Northeast", "Delaware" = "South",
"Florida" = "South", "Georgia" = "South", "Hawaii" = "West", "Idaho" = "West",
"Illinois" = "Midwest", "Indiana" = "Midwest", "Iowa" = "Midwest", "Kansas" = "Midwest",
"Kentucky" = "South", "Louisiana" = "South", "Maine" = "Northeast", "Maryland" = "South",
"Massachusetts" = "Northeast", "Michigan" = "Midwest", "Minnesota" = "Midwest",
"Mississippi" = "South", "Missouri" = "Midwest", "Montana" = "West", "Nebraska" = "Midwest",
"Nevada" = "West", "New Hampshire" = "Northeast", "New Jersey" = "Northeast", "New Mexico" = "West",
"New York" = "Northeast", "North Carolina" = "South", "North Dakota" = "Midwest", "Ohio" = "Midwest",
"Oklahoma" = "South", "Oregon" = "West", "Pennsylvania" = "Northeast", "Rhode Island" = "Northeast",
"South Carolina" = "South", "South Dakota" = "Midwest", "Tennessee" = "South", "Texas" = "South",
"Utah" = "West", "Vermont" = "Northeast", "Virginia" = "South", "Washington" = "West",
"West Virginia" = "South", "Wisconsin" = "Midwest", "Wyoming" = "West"
)
# Step 2: Use the mapping to add a Region column
combined_df$Region <- jurisdiction_to_region[combined_df$Jurisdiction]
combined_df <- combined_df[combined_df$Jurisdiction != 'National',]
library(scales)
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
color_palette <- scales::hue_pal()(length(unique(combined_df$RegionJurisdiction)))
# Plotting with the correct number of colors
ggplot(combined_df, aes(axis1 = G4_Cluster, axis2 = G8_Cluster, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = color_palette) +  # Use the generated color palette
scale_x_discrete(limits = c("G4_Cluster", "G8_Cluster"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from G4 to G8") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
math<-read.csv('../math/grade_4_math/clean_data/jurisdiction_clusters_G4.csv')
reading<-read.csv('../reading/grade_4_reading/clean_data/jurisdiction_clusters_G8.csv')
math<-read.csv('../math/grade_4_math/clean_data/jurisdiction_clusters_G4.csv')
reading<-read.csv('../reading/grade_4_reading/clean_data/jurisdiction_clusters_G4.csv')
head(math)
# Combine df1 and df2 based on 'Jurisdiction'
combined_df <- merge(math, reading, by = "Jurisdiction")
head(combined_df)
colnames(combined_df)[colnames(df) == "G4_Cluster.x"] = "math"
colnames(combined_df)[colnames(df) == "G4_Cluster.y"] = "reading"
combined_df
colnames(combined_df)[colnames(combined_df) == "G4_Cluster.x"] = "math"
colnames(combined_df)[colnames(combined_df) == "G4_Cluster.y"] = "reading"
combined_df
write.csv(combined_df, "jurisdiction_clusters_G4.csv", row.names = FALSE)
library(ggalluvial)
library(ggplot2)
combined_df$count <- 1
ggplot(data = combined_df, aes(axis1 = math, axis2 = reading, y = count)) +
geom_alluvium(aes(fill = factor(Jurisdiction))) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("math", "reading"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from math to reading") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
jurisdiction_to_region <- c(
"Alabama" = "South", "Alaska" = "West", "Arizona" = "West", "Arkansas" = "South",
"California" = "West", "Colorado" = "West", "Connecticut" = "Northeast", "Delaware" = "South",
"Florida" = "South", "Georgia" = "South", "Hawaii" = "West", "Idaho" = "West",
"Illinois" = "Midwest", "Indiana" = "Midwest", "Iowa" = "Midwest", "Kansas" = "Midwest",
"Kentucky" = "South", "Louisiana" = "South", "Maine" = "Northeast", "Maryland" = "South",
"Massachusetts" = "Northeast", "Michigan" = "Midwest", "Minnesota" = "Midwest",
"Mississippi" = "South", "Missouri" = "Midwest", "Montana" = "West", "Nebraska" = "Midwest",
"Nevada" = "West", "New Hampshire" = "Northeast", "New Jersey" = "Northeast", "New Mexico" = "West",
"New York" = "Northeast", "North Carolina" = "South", "North Dakota" = "Midwest", "Ohio" = "Midwest",
"Oklahoma" = "South", "Oregon" = "West", "Pennsylvania" = "Northeast", "Rhode Island" = "Northeast",
"South Carolina" = "South", "South Dakota" = "Midwest", "Tennessee" = "South", "Texas" = "South",
"Utah" = "West", "Vermont" = "Northeast", "Virginia" = "South", "Washington" = "West",
"West Virginia" = "South", "Wisconsin" = "Midwest", "Wyoming" = "West"
)
# Step 2: Use the mapping to add a Region column
combined_df$Region <- jurisdiction_to_region[combined_df$Jurisdiction]
combined_df <- combined_df[combined_df$Jurisdiction != 'National',]
library(scales)
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
color_palette <- scales::hue_pal()(length(unique(combined_df$RegionJurisdiction)))
# Plotting with the correct number of colors
ggplot(combined_df, aes(axis1 = math, axis2 = reading, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = color_palette) +  # Use the generated color palette
scale_x_discrete(limits = c("math", "reading"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from math to reading") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
math<-read.csv('../math/grade_8_math/clean_data/jurisdiction_clusters_G8.csv')
reading<-read.csv('../reading/grade_8_reading/clean_data/jurisdiction_clusters_G8.csv')
head(math)
# Combine df1 and df2 based on 'Jurisdiction'
combined_df <- merge(math, reading, by = "Jurisdiction")
head(combined_df)
colnames(combined_df)[colnames(combined_df) == "G8_Cluster.x"] = "math"
colnames(combined_df)[colnames(combined_df) == "G8_Cluster.y"] = "reading"
combined_df
write.csv(combined_df, "jurisdiction_clusters_G8.csv", row.names = FALSE)
library(ggalluvial)
library(ggplot2)
combined_df$count <- 1
ggplot(data = combined_df, aes(axis1 = math, axis2 = reading, y = count)) +
geom_alluvium(aes(fill = factor(Jurisdiction))) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("math", "reading"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from math to reading") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
jurisdiction_to_region <- c(
"Alabama" = "South", "Alaska" = "West", "Arizona" = "West", "Arkansas" = "South",
"California" = "West", "Colorado" = "West", "Connecticut" = "Northeast", "Delaware" = "South",
"Florida" = "South", "Georgia" = "South", "Hawaii" = "West", "Idaho" = "West",
"Illinois" = "Midwest", "Indiana" = "Midwest", "Iowa" = "Midwest", "Kansas" = "Midwest",
"Kentucky" = "South", "Louisiana" = "South", "Maine" = "Northeast", "Maryland" = "South",
"Massachusetts" = "Northeast", "Michigan" = "Midwest", "Minnesota" = "Midwest",
"Mississippi" = "South", "Missouri" = "Midwest", "Montana" = "West", "Nebraska" = "Midwest",
"Nevada" = "West", "New Hampshire" = "Northeast", "New Jersey" = "Northeast", "New Mexico" = "West",
"New York" = "Northeast", "North Carolina" = "South", "North Dakota" = "Midwest", "Ohio" = "Midwest",
"Oklahoma" = "South", "Oregon" = "West", "Pennsylvania" = "Northeast", "Rhode Island" = "Northeast",
"South Carolina" = "South", "South Dakota" = "Midwest", "Tennessee" = "South", "Texas" = "South",
"Utah" = "West", "Vermont" = "Northeast", "Virginia" = "South", "Washington" = "West",
"West Virginia" = "South", "Wisconsin" = "Midwest", "Wyoming" = "West"
)
# Step 2: Use the mapping to add a Region column
combined_df$Region <- jurisdiction_to_region[combined_df$Jurisdiction]
combined_df <- combined_df[combined_df$Jurisdiction != 'National',]
library(scales)
generate_shades <- function(region, n) {
scales::hue_pal()(n)
}
combined_df <- combined_df %>%
arrange(Region, Jurisdiction) %>%
mutate(RegionJurisdiction = factor(paste(Region, Jurisdiction), levels = unique(paste(Region, Jurisdiction))))
# Step 2: Use this new factor for the fill aesthetic
color_palette <- scales::hue_pal()(length(unique(combined_df$RegionJurisdiction)))
# Plotting with the correct number of colors
ggplot(combined_df, aes(axis1 = math, axis2 = reading, y = 1)) +
geom_alluvium(aes(fill = RegionJurisdiction)) +
geom_stratum() +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_fill_manual(values = color_palette) +  # Use the generated color palette
scale_x_discrete(limits = c("math", "reading"), expand = c(0.05, 0)) +
theme_minimal() +
ggtitle("Jurisdiction Cluster Transitions from math to reading") +
xlab("Grade") +
ylab("Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
